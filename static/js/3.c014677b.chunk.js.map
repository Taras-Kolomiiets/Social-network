{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","value","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageActionCreator","withAuthRedirect"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,qHCWnKC,EARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACH,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCGnBC,EARC,SAACT,GACf,OACE,8BACE,qBAAKG,UAAWC,IAAEC,OAAlB,SAA2BL,EAAMU,a,kCC2BjCC,EAAeC,YAAiB,KAoBhCC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAlBL,SAACd,GACtB,OACE,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBH,KAAK,iBACLe,YAAY,yBAGhB,8BACE,yDAUOC,EAjDC,SAACxB,GACf,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OACtC,cAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMN,GAAI4B,EAAE5B,IAAS4B,EAAE5B,OAEzC6B,EAAmBN,EAAMO,SAASH,KAAI,SAACI,GAAD,OACxC,cAAC,EAAD,CAASvB,QAASuB,EAAEvB,SAAcuB,EAAE/B,OAOtC,OACE,sBAAKC,UAAWC,IAAEwB,QAAlB,UACE,qBAAKzB,UAAWC,IAAE8B,aAAlB,SAAiCP,IACjC,gCACE,qBAAKxB,UAAWC,IAAE4B,SAAlB,SAA6BD,IAC7B,cAAClB,EAAD,CAAqBG,SATL,SAACmB,GACrBnC,EAAMoC,YAAYD,EAAME,0BCDbC,sBACbC,aAbsB,SAACd,GACvB,MAAO,CAAEC,YAAaD,EAAMC,gBAGH,SAACc,GAC1B,MAAO,CACLJ,YAAa,SAACC,GACZG,EAASC,YAAyBJ,SAUtCK,IALaJ,CAMbd","file":"static/js/3.c014677b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2wi78\",\"dialogsItems\":\"Dialogs_dialogsItems__1Tuek\",\"active\":\"Dialogs_active__POsrh\",\"messages\":\"Dialogs_messages__1IqwW\",\"message\":\"Dialogs_message__1lG8k\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={s.dialog}>{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../Common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map((d) => (\r\n    <DialogItem name={d.name} id={d.id} key={d.id} />\r\n  ));\r\n  let messagesElements = state.messages.map((m) => (\r\n    <Message message={m.message} key={m.id} />\r\n  ));\r\n\r\n  const addNewMessage = (value) => {\r\n    props.sendMessage(value.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div>\r\n        <div className={s.messages}>{messagesElements}</div>\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          validate={[required, maxLength100]}\r\n          name=\"newMessageBody\"\r\n          placeholder=\"Enter your message\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add message</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\r\n  AddMessageForm\r\n);\r\n\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { sendMessageActionCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { dialogsPage: state.dialogsPage };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageActionCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  ),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}